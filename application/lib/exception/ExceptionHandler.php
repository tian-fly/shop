<?php
/**
 * Created by PhpStorm.
 * User: xiaotian
 * Date: 2019/7/27
 * Time: 10:48
 */

namespace app\lib\exception;
use think\exception\Handle;
use think\Request;
use think\Log;
use Exception;
use app\lib\exception\Base as BaseException;
class ExceptionHandler extends Handle
{
    private $code;
    private $msg;
    private $errorCode;
    public function render(Exception $e)
    {
        if($e instanceof BaseException){
            $this->code=$e->code;
            $this->msg=$e->msg;
            $this->errorCode=$e->errorCode;

        }else{
            if(config('app_debug')){
                return parent::render($e); // TODO: Change the autogenerated stub
            }
            $this->code=500;
            $this->msg='服务器内部错误';
            $this->errorCode=555;
            $this->recordErrorLog($e);
        }
        $request=Request::instance();
        $data=array('msg'=>$this->msg,'errorCode'=>$this->errorCode,'url'=>$request->url());
        return json($data,$this->code);
    }
    private function recordErrorLog(Exception $e){
        Log::init([
           'type'=>'File',
            'path'  => LOG_PATH,
            'level' => ['error'],
        ]);
        Log::error($e->getMessage());
    }

}